/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        utils_layer_l {
            bindings = <&mo 1>;
            key-positions = <20 21 22 23>;
        };

        utils_layer_r {
            bindings = <&mo 1>;
            key-positions = <26 27 28 29>;
        };

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <13 16>;
        };
    };

    macros {
        sign3: up5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N) &kp RA(A) &kp RA(E)>;
            label = "UP5";
        };

        down5: down5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "DOWN5";
        };

        up10: up10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "UP10";
        };

        down10: down10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "DOWN10";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E      &kp R                &kp T      &kp Y        &kp U            &kp I      &kp O    &kp P
&kp A  &kp S  &kp D      &kp F                &kp G      &kp H        &kp J            &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C      &kp V                &kp B      &kp N        &kp M            &kp COMMA  &kp DOT  &mt LEFT_SHIFT FSLH
              &kp SPACE  &lt 4 RA(BACKSPACE)  &lt 2 RET  &lt 3 ENTER  &lt 5 BACKSPACE  &kp SPACE
            >;
        };

        utils {
            bindings = <
&out OUT_BLE  &bt BT_CLR  &none  &sys_reset  &bootloader  &bootloader  &sys_reset  &none  &none  &none
&none         &none       &none  &none       &none        &none        &none       &none  &none  &none
&none         &none       &none  &none       &none        &none        &none       &none  &none  &none
                          &none  &none       &none        &none        &none       &none
            >;
        };

        mod {
            bindings = <
&none        &kp F7  &kp F8  &kp F9  &kp F10  &sign3  &kp PG_UP  &kp UP_ARROW  &kp PG_DN  &kp BACKSPACE
&kp LS(RET)  &kp F4  &kp F5  &kp F6  &kp F11  &down5  &kp LEFT   &kp DOWN      &kp RIGHT  &kp LS(RETURN)
&none        &kp F1  &kp F2  &kp F3  &kp F12  &none   &none      &none         &none      &none
                     &none   &none   &none    &none   &none      &none
            >;
        };

        mod_opt {
            bindings = <
&trans          &trans  &trans  &trans  &to 0   &up10    &kp HOME      &kp UP    &kp END        &kp LA(BSPC)
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &down10  &kp LA(LEFT)  &kp DOWN  &kp LA(RIGHT)  &trans
&trans          &trans  &trans  &trans  &trans  &trans   &trans        &trans    &trans         &sign3
                        &none   &trans  &trans  &trans   &trans        &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &none     &trans  &kp N7  &kp N8  &kp N9  &kp LC(BSPC)
&trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans
&kp N0  &kp N1  &kp N2  &kp N3  &kp FSLH  &kp N0  &kp N1  &kp N2  &kp N3  &kp FSLH
                &none   &none   &trans    &trans  &trans  &trans
            >;
        };

        mod_cmd {
            bindings = <
&trans  &trans  &trans  &trans  &to 0   &kp G   &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp W   &kp V   &trans
                &to 5   &trans  &trans  &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&kp TAB  &kp LC(TAB)      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL  &kp ASTRK  &kp PLUS   &kp AMPS      &kp UNDER      &kp EXCLAMATION
&kp RET  &kp LC(LS(TAB))  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp POUND  &kp TILDE  &kp SLASH  &kp PIPE      &kp BACKSLASH  &kp MINUS
&none    &none            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT     &none      &none      &kp QUESTION  &kp CARET      &kp GRAVE
                          &none                 &none                  &none      &none      &none      &none
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &to 0   &trans  &kp N7        &kp NUMBER_8  &kp N9        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans  &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                &to 7   &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
